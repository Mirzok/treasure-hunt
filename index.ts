/**
 *  DO NOT EDIT THIS FILE
 */
import solution from './src/solution';

process.stdin.resume();
process.stdin.setEncoding('ascii');
var input_stdin = "";
var input_stdin_array = [];
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});
process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split('\n');
    main();
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

const main = () => {
    const tests = [];

    while (input_currentline !== input_stdin_array.length) {
        
        let testDetails = readLine();
        testDetails = testDetails.replace('=', '').split(',');
        
        const test = {
            mapWidth: testDetails[0],
            mapHeight: testDetails[1],
            turns: parseInt(testDetails[2], 10),
            map: []
        }
    
        for (let row = 0; row < test.mapHeight; row++) {
            test.map.push(readLine().split(''));
        }

        tests.push(test);
    }

    for (const test of tests) {
        const result = solution(test.map, test.turns);
        console.log(result);
    }
}
